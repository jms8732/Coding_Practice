package graph;

import java.util.*;
import java.io.*;

public class problem_13023 {
	static List<Integer> list[];

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		StringTokenizer st = new StringTokenizer(br.readLine());

		int N = Integer.parseInt(st.nextToken());
		int M = Integer.parseInt(st.nextToken());

		list = new ArrayList[N];

		for (int i = 0; i < M; i++) {
			st = new StringTokenizer(br.readLine());
			int s = Integer.parseInt(st.nextToken());
			int e = Integer.parseInt(st.nextToken());

			list[s].add(e);
			list[e].add(s);
		}
		boolean[] visited = new boolean[N];
		int depth =0 ;
		findFriend(depth,visited);
		System.out.println(0);
	}
	private static void findFriend(int depth,int cur, boolean[] visited) {
		if(depth == 5) {
			System.out.println(1);
			System.exit(1);
		}
		
		for(int i = 0 ; i < list[cur].size() ; i++) {
			
		}
		
	}
}
