package search_algorithm;

//텀 프로젝트
import java.util.*;
import java.io.*;

public class problem_9466 {
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		int c = Integer.parseInt(st.nextToken());

		for (int i = 0; i < c; i++) {
			int M = Integer.parseInt(br.readLine());
			boolean [] visited = new boolean[M];
			boolean [] circle = new boolean[M];
			int [] edge = new int[M];
			
			st = new StringTokenizer(br.readLine());
			
			//값 초기화
			for(int j =0 ;j < M ; j++) {
				edge[j] = Integer.parseInt(st.nextToken()) -1;
			}
			
			for(int j =0 ; j < edge.length ; j++) {
				if(!circle[j])
					dfs(edge,j,visited,circle);
			}
			
			int answer = 0 ;
			for(int j =0 ; j< circle.length ; j++)
			{
				if(!circle[j])
					answer++;
			}
			
			System.out.println(answer);
			
		}
	}
	
	private static void dfs(int [] edge, int current, boolean [] visited, boolean[] circle) {
		
		int next = edge[current];
		
		if(visited[next] && circle[next])
			return;
		
		if(!visited[next]) {
			visited[next] = true;
			dfs(edge,next,visited,circle);
			visited[next] = false;
		}else {
			circle[next] = true;
			dfs(edge,next,visited,circle);
		}
	}
}
