package programmers1;

//기지국 설치
import java.util.*;

public class problem_24 {
	public static void main(String[] args) {
		int n = 11;
		int [] stations = {4};
		int w =1;
		int result = solution(n,stations,w);
		System.out.println(result);
	}
	public static int solution(int n ,int [] stations, int w) {
		int answer =0 ;
		Queue<Integer> queue =new LinkedList<>();
		
		//큐에 값 할당
		for(int i = 0 ; i < stations.length ; i++) queue.add(stations[i]);
		
		int start = 1;
		while(!queue.isEmpty()) {
			int point = queue.poll();
			int left = point-w; //현재 포인트의 전파 밖위치
			int right = point+ w; 
			
			if(left > start) {
				int blockCount = left - start; //전파가 닿지 않는 블록의 수
				int tmp = blockCount / (2*w+1);
				if(blockCount % (2*w+1) != 0)
					answer++;
				answer += tmp; //개수 더하기
			}
			if(right > n)
				right = n+1;
			start = right; //다음 시작 위치
		}
		
		int last = n - start;
		int tmp = last / (2*w+1);
		if(last % (2*w+1) != 0)
			answer++;
		answer += tmp;
		
		return answer;
	}
}
