package programmers1;

//거스름 돈
import java.util.*;

public class problem_15 {
	static int count = 0;

	public static void main(String[] args) {
		int result = solution(4);
		System.out.println(result);
	}

	public static int solution(int n, int[] money) {
		int answer = 0;
		return answer;
	}
	
	private static void reCombination(int depth, int n , int [] money, int value , List<Integer> list) {
		//중복을 포함한 조합
		if(value >= n)
		{
			if(value == n)
				count++;
			return;
		}
		
		list.add(money[depth]); //현재 위치의 동전 넣기
		reCombination(depth,n,money,value+money[depth],list); //현재 조합에 동전 더하기
		list.remove(list.size()-1); //현재 조합의 맨 뒤쪽 동전 빼기
		reCombination(depth+1,n,money,value,list); //다음 동전으로 전환
		
	}

}
