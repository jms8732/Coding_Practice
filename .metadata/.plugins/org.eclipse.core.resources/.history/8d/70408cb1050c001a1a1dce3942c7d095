package programmers;

//위장
import java.util.*;

public class problem_49 {
	static int count = 0;

	public static void main(String[] args0) {
		String[][] tmp = { { "yellow_hat", "headgear" }, { "blue_sunglasses", "eyewear" },
				{ "green_turban", "headgear" } };
		int result = solution(tmp);
		System.out.println(result);
	}

	public static int solution(String[][] clothes) {
		HashMap<String, Set<String>> map = new HashMap<>();

		for (int i = 0; i < clothes.length; i++) {
			String kind = clothes[i][1]; // 의상의 종류
			if (map.get(kind) == null) { // 없을 경우
				Set<String> tmpSet = new HashSet<>();
				tmpSet.add(clothes[i][0]);
				map.put(kind, tmpSet);
			} else {
				// 있을 경우
				Set<String> tmpSet = map.get(kind);
				tmpSet.add(clothes[i][0]);
				map.put(kind, tmpSet); // 갱신
			}
			count++;
		}

		Iterator it = map.keySet().iterator();
		
		for(int i =0 ; i < map.size() ; i++) {
		while(it.hasNext())
		{
			Set<String> tmp = (Set)it.next();
			dfs(it,tmp.size(),0,i+1 );
		}
		}
		
	}
	public static void dfs(Iterator it, int currentSize, int current, int step) {
		if(current == step)
		{
			count += currentSize;
			return;
		}
		
		while(it.hasNext()) {
			Set<String>tmp = (Set)it.next();
			currentSize *= tmp.size();
			dfs(it,currentSize,current+1,step);
		}
	}

}
