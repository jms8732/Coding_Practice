package programmers;

//가장 큰수
import java.util.*;

public class problem_25 {
	public static void main(String[] args) {
		int tmp[] = { 61, 6, 60 };
		String result = solution(tmp);
		System.out.println(result);
	}

	public static String solution(int[] numbers) {
		Stack<String> stack = new Stack<>();
		Queue<String> queue = new LinkedList<>();
		StringBuilder sb = new StringBuilder();
		for (int i = 0; i < numbers.length; i++) {
			queue.add(Integer.toString(numbers[i])); // 벡터 값으로 변환
		}
		stack.add(queue.poll()); // 첫번째 값 삽입

		while (!queue.isEmpty()) {
			String value1 = (String) stack.peek();
			String value2 = (String) queue.poll();
			int i1 = 0;
			int i2 = 0;
			while (true) {
				int v1 = value1.charAt(i1) - '0';
				int v2 = value2.charAt(i2) - '0';
				if (v1 > v2) { // 스택에 있는 값이 클 경우
					queue.add(value2);
					break;
				} else if (v1 < v2) { // 큐에 있는 값이 클 경우
					value1 = stack.pop();
					stack.add(value2);
					queue.add(value1);
					break;
				}
				if (i1 == value1.length() - 1 && i2 == value2.length() - 1)
					break;
				else {// 다음 숫자로 전환
					i1 = (i1 + 1) % value1.length();
					i2 = (i2 + 1) % value2.length();
				}
			}
		}
		for(int i =0 ; i< stack.size() ; i++) {
			sb.append(stack.get(i));
		}
	}
}
