package greedy;

//가장 긴 증가하는 부분수열
import java.util.*;
import java.io.*;

public class problem_12015 {
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		int N = Integer.parseInt(br.readLine());
		int[] input = new int[N];
		int[] array = new int[1000001];
		
		StringTokenizer st = new StringTokenizer(br.readLine());

		for (int i = 0; i < N; i++) {
			input[i] = Integer.parseInt(st.nextToken());
		}

		int answer =0 ;
		
		for (int i = 0; i < N; i++) {
			int cur = input[i];
			if(array[cur] == 0)
				Arrays.fill(array,cur,array.length, 1);
			else {
				Arrays.fill(array, cur,array.length,array[cur]+1);
			}
		}
		
		for(int i = 1; i<= 1000000 ; i++) answer = Math.max(answer, array[i]);

	
		System.out.println(answer);
	}

}
