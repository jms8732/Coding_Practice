package programmers1;

//예산

public class problem_29 {
	public static void main(String[] args) {
		int d[] = { 1, 3, 2, 5, 4 };
		int budget = 9;

		System.out.println(solution(d, budget));

	}

	public static int solution(int[] d, int budget) {
		int depth = 0;
		int count = 0;
		count = Math.max(count, dfs(depth + 1, 0, d, 0, 0, budget));

		return count;
	}

	private static int dfs(int depth, int value, int d[], int count, int next, int budget) {

		int tmpCount = count;
		for (int i = next; i < d.length; i++) {
			if (value + d[i] <= budget) { // 예산 내 될 경우
				tmpCount = Math.max(dfs(depth + 1, value + d[i], d, count + 1, i + 1, budget), count);
			}
		}

		return tmpCount;
	}
}
