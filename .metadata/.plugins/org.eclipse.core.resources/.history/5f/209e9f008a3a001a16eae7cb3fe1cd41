package combination;

//N°ú M(7)
import java.io.*;
import java.util.*;

public class problem_15656 {
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());

		int N = Integer.parseInt(st.nextToken());
		int M = Integer.parseInt(st.nextToken());

		int[] value = new int[N];
		int[] array = new int[M];

		st = new StringTokenizer(br.readLine());

		for (int i = 0; i < value.length; i++)
			value[i] = Integer.parseInt(st.nextToken());

		Arrays.sort(value);
		int depth = 0;
		dfs(depth, value, array);
	}

	private static void dfs(int depth, int[] value, int[] array) throws IOException {
		if (depth == array.length) {
			print(array);
			return;
		}

		for (int i = 0; i < value.length; i++) {
			array[depth] = value[i];
			dfs(depth + 1, value, array);
		}
	}

	private static void print(int[] array) throws IOException {
		for (int i : array)
			System.out.print(i + " ");
		System.out.println();

	}
}
