package dp;

//동전2

import java.io.*;
import java.util.*;

public class problem_2294 {
	public static void main(String[] args) throws IOException{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		
		StringTokenizer st = new StringTokenizer(br.readLine());
		int N = Integer.parseInt(st.nextToken());
		int K = Integer.parseInt(st.nextToken());
		Set<Integer> set = new TreeSet<>();
		
		
		//중복 제거
		for(int i =0 ; i < N ; i++) set.add(Integer.parseInt(br.readLine()));
		
		int [] array= new int[set.size()];
		Iterator<Integer> it = set.iterator();
		int idx =0 ;
		while(it.hasNext()) array[idx++] = it.next(); 
		
		
		int [][] dp = new int[N][K];
		for(int [] tmp : dp){
			Arrays.fill(tmp, -1);
		}
		
		for(int i = 0 ;i < K ; i++)
			dp[0][i] = array[0] * (i+1);
		
		for(int i = 1; i < K ; i++) {
			System.arraycopy(dp[i-1], 0, dp[i], 0, i+1);
			for(int j = i+1; j < K ; j++) {
				dp[i][j] = Math.min(dp[i-1][j],dp[i][i]+dp[i][j-i]);
			}
		}
	}
}
