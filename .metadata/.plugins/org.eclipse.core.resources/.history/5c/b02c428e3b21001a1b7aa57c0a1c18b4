package samsung;


//감시
import java.util.*;
import java.io.*;

public class problem_15683 {
	static int N,M;
	static int min = Integer.MAX_VALUE;
	public static void main(String[] args) throws IOException{
		BufferedReader br =new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		
		N = Integer.parseInt(st.nextToken());
		M = Integer.parseInt(st.nextToken());
		int [][] map = new int[N][M];
		int camera = 0;
		
		List<List<Integer>> list= new ArrayList<>();
		
		for(int i =0 ; i< N ; i++) {
			st= new StringTokenizer(st.nextToken());
			for(int j =0 ; j < M ; j ++) {
				int tmp = Integer.parseInt(st.nextToken());
				if(tmp != 0  && tmp != 6) { //벽과 빈 공간이 아닌 경우
					//카메라 좌표 값들 설정
					List<Integer> tmpList=  new ArrayList<>();
					tmpList.add(i);
					tmpList.add(j);
					list.add(tmpList);
				}
				map[i][j] = tmp;
			}
		}
		
		System.out.println(min);
	}
	
	private static void dfs(List<List<Integer>> list , int depth) {
		
	}
}
