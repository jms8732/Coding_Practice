package dp;

//동전2

import java.io.*;
import java.util.*;

public class problem_10844 {
/*	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		StringTokenizer st = new StringTokenizer(br.readLine());
		int N = Integer.parseInt(st.nextToken());
		
		long MOD = 1000000000;
		
		long [][] dp = new long [N+1][9];
		long total = 9;
		
		Arrays.fill(dp[1], 1);
		dp[2][0] = 2;
		
		for(int i =2 ; i<= N ; i++) {
			for(int j = 8 ; j>=0 ; j--) {
				if(j==8) {
					//9일 경우 
					dp[i][j] = dp[i-1][j-8] % MOD; //이전 1의 값을 가져온다
				}
				if(j >= 1 && j < 8) {
					//2~8
					dp[i][j] = (dp[i-1][j-1] + dp[i-1][j+1]) % MOD;
				}
				if(j== 0 && i != 2) {
					//1인 경우
						dp[i][j] = (dp[i-2][j] + dp[i-1][j+1]) % MOD; //8의 값을 가져온다.
				}
				total = (total+dp[i][j]) % MOD;
			}
		}
	
		System.out.println(total);
	}*/
	
	static long[][] dp;
	static long mod = 1000000000;

	public static void main(String[] args) {
		Scanner scanner = new Scanner(System.in);
		int N = scanner.nextInt();
		dp = new long[101][10];
		Arrays.fill(dp[1], 1);
		dp[2][1] = 2;
		long result = f(N);
		System.out.println(result);
	}

	static long f(int n) {
		if (n == 1)
			return 9;
		long total = 0;
		for (int i = 2; i <= n; i++) {
			for (int j = 9; j >= 1; j--) {
				if (j == 1 && i != 2)
					dp[i][j] = dp[i - 2][j] % mod + dp[i - 1][j + 1] % mod;
				else if (j == 9)
					dp[i][j] = dp[i - 1][j - 8] % mod;
				else if (j >= 2 && j < 9)
					dp[i][j] = dp[i - 1][j + 1] % mod + dp[i - 1][j-1] % mod;
				if(i == n) {
					total += (dp[i][j] % mod);
					total %= mod;
				}
			}
		}
		return total;
	}
}
