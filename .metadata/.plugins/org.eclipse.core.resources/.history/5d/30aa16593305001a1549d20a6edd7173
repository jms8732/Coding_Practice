package programmers;
//후보키

import java.util.*;

public class problem_38 {
	public static void main(String[] args) {
		String[][] relation = { { "100", "ryan", "music", "2" }, { "200", "apeach", "math", "2" },
				{ "300", "tube", "computer", "3" }, { "400", "con", "computer", "4" }, { "500", "muzi", "music", "3" },
				{ "600", "apeach", "music", "2" } };

		int result = solution(relation);
		System.out.println(result);
	}

	public static int solution(String[][] relation) {
		int row = relation.length; // 릴레이션
		int col = relation[0].length; // 컬럼
		int result = 0;
		List<Integer> list = new ArrayList<>(); // 유일성을 담는 리스트
		for (int i = 0; i < (1 << col); i++) {
			// 컬럼의 종류 생성
			int bitmask = i;

			if (Unique(bitmask, relation)) // 유일성에 만족 할 경우
				list.add(bitmask);
		}

		return 0;
	}

	public static boolean Unique(int bitmask, String[][] relation) {
		int row = relation.length;
		int col = relation[0].length;

		HashSet<String> set = new HashSet<>();
		for (int i = 0; i < col; i++) {
			// 컬럼으로 반복문 수행
			for (int j = 0; j < row; j++) {
				if ((bitmask & i) == i) {
					// 해당 비트 마스크가 값보다 크면
					String tmp = relation[j][i];
					if (set.contains(tmp))
						return false; // 값이 이미 존재할 경우 유일성에 배제
					set.add(tmp);
				}
			}
		}

		return true;
	}
}
