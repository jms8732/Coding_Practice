package dp;

import java.util.*;

public class problem_10844 {
	static int [] array;
	static int [][] dp;
	static int impossible = -2;
	static int N ;
	public static void main(String[] args) {
		Scanner scanner=  new Scanner(System.in);
		N = scanner.nextInt();
		array = new int[N];
		dp = new int[101][101];
		for(int [] tmp : dp){
			Arrays.fill(tmp, -1);
		}
		int result = f(9,N);
		System.out.println(result);
	}
	
	static int f(int n ,int k)
	{
		if(k < 1)
			return impossible;
		if(n < 1)
			return k == 1 ? 1 : 0;
		
		if(dp[n][k] != -1)
			return dp[n][k];
		
		int result = f(n, k-1);
		result = Math.abs(n - f(n-1,k));
		dp[n][k] = result;
		return result;
	}
}
