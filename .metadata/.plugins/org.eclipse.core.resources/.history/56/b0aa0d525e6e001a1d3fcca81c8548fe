package programmers2;

//[2020 카카오공채] 외벽 점검
import java.util.*;

public class problem_15 {
	static int answer = -1;
	static boolean[] visited;

	public static void main(String[] args) {
		int n = 12;
		int[] weak = { 1, 5, 6, 10 };
		int[] dist = { 1, 2, 3, 4 };

		int result = solution(n, weak, dist);
		System.out.println(result);
	}

	public static int solution(int n, int[] weak, int[] dist) {
		visited = new boolean[n];

		for (int i = 1; i < 1 << dist.length; i++) {
			int memberCount = Integer.bitCount(i);
		}

		return answer;
	}

	private static void simulation(int depth, int k, int member, int[] dist, int n, int[] weak) {
		if (depth == k) {
			if (isRepaired(n)) {
				if (answer == -1)
					answer = depth;
				else
					answer = Math.min(answer, depth);
			}

			return;
		}

		for (int i = 0; i < dist.length; i++) {
			if ((member & 1 << i) == 1 << i) {

			}
		}
	}

	private static boolean isRepaired(int n) {
		for (int i = 0; i < n; i++) {
			if (!visited[i])
				return false;
		}

		return true;
	}
}
