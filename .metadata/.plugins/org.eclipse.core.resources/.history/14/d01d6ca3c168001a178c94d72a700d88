package search_algorithm;

//한윤정이 이탈리에 가서 아이스크림을 사먹는데
import java.util.*;
import java.io.*;

public class problem_2422 {
	static boolean [][] bad;
	static int answer, N, K;

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		StringTokenizer st = new StringTokenizer(br.readLine());

		N = Integer.parseInt(st.nextToken());
		K = Integer.parseInt(st.nextToken());
		
		boolean [] selected = new boolean[N];
		bad =  new boolean[N][N];
		
		for(int i =0 ; i < K ; i++) {
			st = new StringTokenizer(br.readLine());
			int s = Integer.parseInt(st.nextToken())-1;
			int e = Integer.parseInt(st.nextToken())-1;
			
			bad[s][e] = true;
			bad[e][s] = true;
		}
		
		for(int i =0 ; i< N ; i++) {
			selected[i] = true;
			iceCream(1,i,selected);
			selected[i] = false;
		}
		
		System.out.println(answer);
	}

	private static void iceCream(int depth, int cur, boolean[] selected) {
		if(depth == 3) {
			for(int i =0 ; i< N ; i++) {
				for(int j =0 ; j < N ; j++) {
					if(i != j && selected[i] && selected[j] && !bad[i][j]) {
						answer++;
					}
				}
			}
			
			return;
		}
		
		for(int i = cur +1 ; i < N ; i++) {
			selected[i] = true;
			iceCream(depth+1,i,selected);
			selected[i] = false;
		}
	}
}
