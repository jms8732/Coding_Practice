package greedy;

//가장 긴 증가하는 부분수열
import java.util.*;
import java.io.*;

public class problem_12015 {
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		int N = Integer.parseInt(br.readLine());
		int[] array = new int[1000001];
		int[] input = new int[N];
		StringTokenizer st = new StringTokenizer(br.readLine());

		for (int i = 0; i < N; i++) {
			input[i] = Integer.parseInt(st.nextToken());
		}

		int longest = 0;

		for (int i = 0; i < input.length; i++) {
			if (array[i] != 0) {
				int cur = i;
				int big = 0;
				for (int j = cur - 1; j >= 1; j--) {
					big = Math.max(big, array[j]);
				}

				array[i] = Math.max(big + 1, array[i]);
			}
		}

		for (int i = 1; i <= 1000000; i++)
			if (array[i] != 0)
				longest = Math.max(longest, array[i]);
		System.out.println(longest);
	}

}
