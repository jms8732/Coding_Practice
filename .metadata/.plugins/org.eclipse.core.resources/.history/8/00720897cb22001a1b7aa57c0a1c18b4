package programmers1;
//가장 큰 정사각형 찾기

import java.util.*;

public class problem_13 {
	public static void main(String[] args) {
		int[][] board = {{0,1,1,1},{1,1,1,1},{1,1,1,1},{0,0,1,0}};
		int result = solution(board);
		System.out.println(result);
	}

	public static int solution(int[][] board) {
		int[][] window = null;
		int len = board.length * board.length; // 정사각형 이므로

		int windowSize = 0;
		boolean check = false;
		while (!check) {
			windowSize += 1;
			if(windowSize > board.length)
				break;
			
			check = true;
			for (int i = 0; i < len; i++) {
				int x = i / len;
				int y = i % len;

				if (checkSquare(x, y, windowSize, board)) {
					check= false;
					break;
				}

			}
		}
		
		return windowSize*windowSize;
		
	}

	private static boolean checkSquare(int x, int y, int windowSize, int[][] board) {
		for (int i = x; i < x + windowSize; i++) {
			for (int j = y; j < y + windowSize; j++) {
				if(i <0 || i >= board.length || j < 0 || j >=board.length) //범위를 벗어난 경우
					continue;
				
				if (board[i][j] == 0) //정사각형을 구성하는 값 중 한개라도 0이 존재할 경우
					return false;
			}
		}

		return true;
	}
}
