package others;
//∞ÒµÂπŸ»Â¿« √ﬂ√¯

import java.util.*;
import java.io.*;

public class problem_6588 {
	static int number;
	static BufferedWriter bw;

	public static void main(String[] args) throws IOException {
		Scanner sc = new Scanner(System.in);
		bw = new BufferedWriter(new OutputStreamWriter(System.out));
		
		boolean[] prime = new boolean[1000001];
		List<Integer> tmp = new ArrayList<>();
		for (int i = 3; i < prime.length; i+=2) {
			if (!prime[i]) {
				prime[i] = true;
				tmp.add(i);
				for (int j = i; j < prime.length; j += i) {
					prime[j] = true;
				}
			}
		}

		while (true) {
			number = sc.nextInt();
			if (number == 0)
				break;
			combination(tmp);
			bw.flush();
		}

	}

	private static void combination(List<Integer> tmp) throws IOException {
		boolean check = false;
		int value = 0;
		for (int i = 0; i < tmp.size(); i++) {
			value = tmp.get(i);
			if (tmp.contains(number - value)) {
				check = true;
				break;
			}
		}

		if (check) {
			String tmpp = number + " = " + value + " + " + (number - value);
			bw.write(tmpp);
		} else
			bw.write("Goldbach's conjecture is wrong.");
		bw.newLine();
	}
}
