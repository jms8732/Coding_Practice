package programmers2;

//[2020 카카오공채] 외벽 점검
import java.util.*;

public class problem_15 {

	public static void main(String[] args) {
		int n = 50;
		int[] weak = { 1, 5, 10, 12, 22, 25 };
		int[] dist = { 4, 3, 2, 1 };

		int result = solution(n, weak, dist);
		System.out.println(result);
	}

	public static int solution(int n, int[] weak, int[] dist) {
		int answer = -1;

		for (int i = 1; i <= dist.length; i++) {
			int[] array = new int[i];

			if (simulation(0, 0, n, dist, weak, array)) {
				answer = i;
				break;
			}
		}
		return answer;
	}

	private static void simulation(int depth, int n, List<Integer> list, int[] dist, int[] weak) {

		for (int i = depth; i < dist.length; i++) {
			list.add(depth, dist[i]);
			swap(depth, i, dist);
			simulation(depth + 1, n, list, dist, weak);
			swap(i, depth, dist);
		}
	}

	private static void swap(int depth, int i, int[] dist) {
		int tmp = dist[depth];
		dist[depth] = dist[i];
		dist[i] = tmp;
	}
}