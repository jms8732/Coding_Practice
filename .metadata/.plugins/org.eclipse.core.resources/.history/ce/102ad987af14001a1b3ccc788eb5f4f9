package programmers1;
//순위
import java.util.*;

public class problem_10 {
	public static void main(String[] args) {
		int [][] result = {{4,3},{4,2},{3,2},{1,2},{2,5}};
		System.out.println(solution(5,result));
	}

	/*
	 * 승리=1 패배=-1, 애매함=0
	 */
	public static int solution(int n, int[][] results) {
		int [][] board = new int[n][n]; //승리 표
		
		
		for(int i = 0 ;i < results.length ; i++) {
			int x = results[i][0] -1;
			int y = results[i][1] -1 ;
			board[x][y] = 1; //승리 표시
			board[y][x] = -1; //패배 표시
		}
		
		for(int i= 0 ; i< n ; i++) {
			for(int j=0 ; j < n ; j++) {
				if(board[i][j] == 1) {
					//승리가 있을 경우, 진 선수가 다른 선수를 이겼는지 판단.
					dfs(j,i,n,board); 
				}
			}
		}
		int count = 0; 
		for(int i =0 ; i< board.length ; i++) {
			boolean check = false;
			for(int j =0;  j < board[i].length ; j++) {
				if(i != j && board[i][j] == 0) {
					//자기 자신이 아니면서 board에 0이 있는 경우
					check =true;
					break;
				}
			}
			if(!check)
				count++;
		}
		
		return count;
	}
	
	public static void dfs(int x ,int y, int n, int [][] board) {
		for(int i = y; i < n ; i++) {
			if(board[x][i] == 1)
			{
				board[y][i] = 1; //승리
				board[i][y] = -1; //페베
				dfs(i,x,n,board); //다음 좌표를 넣고 dfs호출
			}
		}
	}
}
