package greedy;

//순회 강연
import java.util.*;
import java.io.*;

public class problem_2109 {
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		StringTokenizer st = null;

		int N = Integer.parseInt(br.readLine());
		PriorityQueue<Node> pq = new PriorityQueue<Node>();
		for (int i = 0; i < N; i++) {
			st = new StringTokenizer(br.readLine());
			int p = Integer.parseInt(st.nextToken());
			int d = Integer.parseInt(st.nextToken());

			pq.add(new Node(p, d));
		}

		int totalCost = 0;
		while (!pq.isEmpty()) {
			Node cur = pq.poll();

			int big = cur.p;
			if (!pq.isEmpty()) {
				while (cur.d == pq.peek().d) {
					big = Math.max(big, pq.poll().p);
				}
			}
			totalCost += big;
		}
		System.out.println(totalCost);
	}

	private static class Node implements Comparable<Node> {
		int p, d;

		public Node(int p, int d) {
			this.p = p;
			this.d = d;
		}

		@Override
		public int compareTo(Node arg0) {
			// TODO Auto-generated method stub
			if (this.d < arg0.d)
				return -1;
			else if (this.d == arg0.d) {
				if (this.p > arg0.p)
					return -1;
				else
					return 1;
			} else
				return 1;
		}

	}
}
