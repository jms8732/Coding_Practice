package bitmask;

//타일 채우기
import java.util.*;
import java.io.*;

public class problem_2133 {
	static boolean[][] dp;
	public static void main(String[] args) {
		Scanner scanner = new Scanner(System.in);
		
		int N = scanner.nextInt();
		
		if(N % 2 == 0) {
			int bit = 
		}else
			System.out.println(0);
	}
	
	private static int dfs(int bit, int [][] map) {
		//map에 모든 타일을 다 깔았을 경우 1을 반환한다.
		if(isFinish(map))
			return 1;
		
		
		
		for(int i =0 ; i < map.length ; i++) {
			for(int j =0 ; j < map[i].length ; j++) {
				if(map[i][j] == 0) {
					
				}
			}
		}
		
	}
	
	private static boolean isFinish(int [][] map) {
		for(int i = 0 ; i < map.length ; i++) {
			for(int j =0 ; j< map[i].length ; j++) {
				if(map[i][j] != 1)
					return false;
			}
		}
		
		return true;
	}
}
