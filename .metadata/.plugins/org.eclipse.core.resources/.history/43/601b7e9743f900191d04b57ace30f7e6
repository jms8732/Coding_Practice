package programmers;

//더 맵게
public class problem_15 {
	public static void main(String[] args) {

	}

	public static int solution(int[] scoville, int K) {
		minHeap(scoville);
	}

	public void minHeap(int [] array) {
		int left = 0;
		int right =0;
		int rootIdx = 0;
		int leftIdx =0 ;
		int rightIdx= 0;
		int root = 0;
		int min = 0;
		int point = 0;
		for(int i = array.length - 1; i >= 0 ; i-=2) {
			if(i % 2 == 0) //짝수 일 경우
				rootIdx = (i-2)/2;
			else //홀수 일 경우,
				rootIdx = (i-1)/2;
			leftIdx = 2*rootIdx + 1; //해당 루트의 왼쪽 자식
			rightIdx = 2*rootIdx + 2;  //해당 루트의 오른쪽 자식
			
			if(rightIdx <= array.length-1) {
				if(array[leftIdx] < array[rightIdx]) {
					min = array[leftIdx];
					point= leftIdx;
				}else {
					min = array[rightIdx];
					point = rightIdx;
					}
			}
			
			root = array[rootIdx];
			if(root > min) {
				int tmp = root;
				array[rootIdx] = min;
				array[]
			}
		}
	}
}
