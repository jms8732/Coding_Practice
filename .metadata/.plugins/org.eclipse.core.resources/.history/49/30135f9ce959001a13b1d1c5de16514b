package others;
//골드바흐의 추측

import java.util.*;
import java.io.*;
public class problem_6588 {
	static int number;
	static BufferedWriter bw;
	public static void main(String[] args) throws IOException{
		Scanner sc = new Scanner(System.in);
		bw = new BufferedWriter(new OutputStreamWriter(System.out));
		
		while (true) {
			number = sc.nextInt();
			if (number == 0)
				break;

			boolean[] prime = new boolean[number];
			List<Integer> tmp = new ArrayList<>();
			for (int i = 2; i < number; i++) {
				if (!prime[i]) {
					prime[i] = true;

					// 입력값 내 홀수 소수를 넣는다.
					if (i % 2 != 0) {
						tmp.add(i);
					}
					for (int j = i; j < number; j += i) {
						prime[j] = true;
					}
				}
			}
			combination(tmp);
			bw.flush();
		 }
		
	}

	private static void combination(List<Integer> tmp) throws IOException {
		boolean check = false;
		int value = 0;
		for(int i =0 ; i< tmp.size() ;i++) {
			value = tmp.get(i);
			if(tmp.contains(number-value)) {
				check= true;
				break;
			}
		}

		if (check) {
			String tmpp = number + " = " + value + " + " + (number - value);
			bw.write(tmpp);
		} else
			bw.write("Goldbach's conjecture is wrong.");
		bw.newLine();
	}
}
