package samsung;

//미세먼지 안녕!
import java.util.*;
import java.io.*;

public class problem_17144 {
	static int R, C;

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		StringTokenizer st = new StringTokenizer(br.readLine());

		R = Integer.parseInt(st.nextToken());
		C = Integer.parseInt(st.nextToken());
		int T = Integer.parseInt(st.nextToken());

		int[][] map = new int[R][C];
		for (int i = 0; i < R; i++) {
			st = new StringTokenizer(br.readLine());
			for (int j = 0; j < C; j++) {
				map[i][j] = Integer.parseInt(st.nextToken());
			}
		}

		for (int i = 0; i < T; i++) {
			expand(map); // 먼지 확산
		}
	}

	private static void expand(int[][] map) {
		int[][] tmpMap = new int[R][C]; // 동시에 확장이 이뤄지기 때문에
		copyMap(tmpMap, map); // 맵 복사

		for (int i = 0; i < R; i++) {
			for (int j = 0; j < C; j++) {
				if (map[i][j] != 0 && map[i][j] != -1) {
					expandDust(i, j, tmpMap);
				}
			}
		}
	}

	private static void expandDust(int x,int y, int[][] tmpMap) {
		int [] ud = {-1,0,1,0};
		int [] rl = {0,1,0,-1};
		
		for(int i =0 ; i< 4 ;i++) {
			int nx = x + ud[i];
			int ny = y + rl[i];
			if(nx < 0 || ny < 0 || nx >= R || ny >= C)
		}
	}

	private static void copyMap(int[][] src, int[][] dest) {
		int idx = 0;
		for (int i[] : src) {
			System.arraycopy(i, 0, dest[idx], 0, i.length);
		}
	}

}
