package search_algorithm;

//한윤정이 이탈리에 가서 아이스크림을 사먹는데
import java.util.*;
import java.io.*;

public class problem_2422 {
	static List<String> combination;
	static int[] array;
	static StringBuilder sb;
	static String [] bad;

	public static void main(String[] args)throws IOException{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		
		StringTokenizer st = new StringTokenizer(br.readLine());
		
		int N = Integer.parseInt(st.nextToken());
		int K = Integer.parseInt(st.nextToken());
		array = new int[N];
		bad = new String[N];
		
		for(int i =0 ; i < N ; i++) array[i] = i+1;
		for(int i = 0; i < K ; i++) bad[i] = br.readLine();
		combination = new ArrayList<>();
		sb = new StringBuilder();
		iceCream(0,0);
		
		int answer =combination.size();
	
		System.out.println(answer);
		
	}

	private static void iceCream(int depth, int next) {
		if (depth == 3) {
			String combi = sb.toString().trim();
			
			for(String tmp : bad) {
				if(combi.contains(tmp))
					return;
			}
			
			combination.add(combi);
			return;
		}

		for (int i = next; i < array.length; i++) {
			sb.append(array[i] + " ");
			iceCream(depth + 1, i + 1);
			sb.delete(sb.length() - 2, sb.length());
		}
	}
}
