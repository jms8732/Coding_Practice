package dp;
import java.util.*;

public class problem_11052 {
	static int [] array;
	static int [] dp;
	static int impossible = -2;
	public static void main(String[] args) {
		Scanner scanner = new Scanner(System.in);
		int N =scanner.nextInt();
		array = new int[N+1];
		dp = new int[N+1];
		Arrays.fill(dp, -1);
		for(int i =1 ; i <= N ; i++) {
			int tmp = scanner.nextInt();
			array[i] = tmp;
		}
		int result = f(1,N);
	}
	static int f(int idx , int k) {
		if(idx >= array.length )
			return k == 0 ? array[idx-1] : impossible;
		if(dp[idx] != -1)
			return dp[idx];
		int result = f(idx+1,k);
		result= Math.max(result, f(idx,idx-k)+1);
		dp[idx] = result* array[idx];
	
		return result;
		
		
		
	}
}
