package search_algorithm;

//한윤정이 이탈리에 가서 아이스크림을 사먹는데
import java.util.*;
import java.io.*;

public class problem_2422 {
	static int [] bad;
	static int answer, N, K;

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		StringTokenizer st = new StringTokenizer(br.readLine());

		N = Integer.parseInt(st.nextToken());
		K = Integer.parseInt(st.nextToken());

		bad = new int[N];
		
		for(int i =0 ; i < K ; i++) {
			st = new StringTokenizer(br.readLine());
			int a = Integer.parseInt(st.nextToken())-1;
			int b = Integer.parseInt(st.nextToken())-1;
			
			int tmp = 1<<a | 1<<b;
			bad[a] |= tmp;
			bad[b] |= tmp;
			
		}
		
		for(int i =0 ; i < N ;i++) {
			iceCream(1,i,,0);
		}
		
		System.out.println(answer);
	}

	private static void iceCream(int depth, int next, int count) {
		if (depth == 3) {
			answer++;
			return;
		}

		for(int i = next+1; i < N ; i++) {
			int pb = Integer.bitCount(bad[next] & 1<<next);
			int nb = Integer.bitCount(bad[next] & 1<<i);
			if(pb + nb + count < 2) {
				int tmp = bad[i];
				bad[i] |= bad[next];
				iceCream(depth+1,i+1,count+pb+nb);
				bad[i] = tmp;
			}
		}
	}
}
