package dp;

//동전2

import java.io.*;
import java.util.*;

public class problem_10844 {
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		StringTokenizer st = new StringTokenizer(br.readLine());
		int N = Integer.parseInt(st.nextToken());
		
		int MOD = 1000000000;
		
		int [][] dp = new int[N][9];
		int total = 9;
		
		Arrays.fill(dp[0], 1);
		
		
		for(int i =1 ; i< N ; i++) {
			for(int j = 9 ; j>=0 ; j--) {
				if(j==9) {
					//9일 경우 
					dp[i][j] = dp[i-1][j-1]; //이전 8의 값을 가져온다
				}
				if(j >= 2 && j < 9) {
					//2~8
					dp[i][j] = dp[i-1][j-1] + dp[i-1][j+1] ;
				}
				if(j== 1) {
					//1인 경우
					dp[i][j] = dp[i][8]; //8의 값을 가져온다.
				}
				total = (total+dp[i][j]) % MOD;
			}
		}
	
		System.out.println(total);
	}
}
