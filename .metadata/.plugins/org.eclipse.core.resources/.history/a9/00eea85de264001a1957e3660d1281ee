package bruteForce;

//뱀과 사다리 게임
import java.util.*;
import java.io.*;

public class problem_16928 {
	static int[] map;

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());

		map = new int[100];

		int N = Integer.parseInt(st.nextToken());
		int M = Integer.parseInt(st.nextToken());

		// 사다리
		for (int i = 0; i < N; i++) {
			st = new StringTokenizer(br.readLine());
			int s = Integer.parseInt(st.nextToken());
			int e = Integer.parseInt(st.nextToken());

			map[s - 1] = e - 1;
		}

		// 뱀
		for (int i = 0; i < M; i++) {
			st = new StringTokenizer(br.readLine());
			int s = Integer.parseInt(st.nextToken());
			int e = Integer.parseInt(st.nextToken());

			map[s - 1] = e - 1;
		}

		startGame();
	}

	private static void startGame() {
		Queue<Node> queue = new LinkedList<>();

		// 처음 위치
		queue.add(new Node(1, 0));

		while (!queue.isEmpty()) {
			Node tmp = queue.poll();

			int cur = tmp.idx;
			if (cur == map.length) {
				System.out.println(tmp.move);
				break;
			}

		}
	}

	private static class Node {
		int idx, move;

		public Node(int i, int m) {
			this.idx = i;
			this.move = m;
		}
	}
}
