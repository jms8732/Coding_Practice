package combination;

//1로 만들기
import java.util.*;

public class problem_1463 {
	static int N;
	static int[] dp;
	public static void main(String[] args) {
		Scanner scanner = new Scanner(System.in);
		N = scanner.nextInt();
		dp = new int[N +1];
		
		int result = dfs(1);
		System.out.println(result);
		
	}
	
	private static int dfs(int target) {
		if(target > N)
			return dp[target];
		
		if(target == 2 || target == 3) //2와 3으로 나눠지는 경우
			return 1;
		
		if(dp[target] != 0) //해당 인덱스에 값이 있으면 해당 인덱스를 만드는 최소의 경우
			return dp[target];
		
		int result = Integer.MAX_VALUE;
		
		if(target % 2 == 0) {
			//2로 나눠지는 경우
			result = Math.min(result, dfs(target/2)+1);
		}
		if(target % 3 == 0) //3으로 나눠지는 경우
			result = Math.min(result, dfs(target/3)+1);
		
		result = Math.min(result, dfs(target-1)+1); //1로 빼는 경우
		dp[target] =result;
		
		result = dfs(target+1);
		
		return result;
	}
}
