package topological_sort;

//문제집
import java.util.*;
import java.io.*;

public class problem_1766 {
	static List<Integer> [] list;
	public static void main(String[] args) throws IOException{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st =new StringTokenizer(br.readLine());
		
		int N = Integer.parseInt(st.nextToken());
		int M = Integer.parseInt(st.nextToken());
		
		list = new ArrayList[N];
		
		for(int i =0 ; i < N ; i++) list[i] = new ArrayList<>();
		
		for(int i =0 ; i< M ; i++) {
			st = new StringTokenizer(br.readLine());
			int l = Integer.parseInt(st.nextToken());
			int k = Integer.parseInt(st.nextToken());
			
			list[l].add(k);
		}
		
		for(int i =0 ; i< list.length ; i++) {
			Collections.sort(list[i]); //오름 차순 정렬
		}
		
		Queue<Integer> queue=  new LinkedList<>();
		
		for(int i =0 ; i< list.length ; i++) {
			dfs(i,queue);
		}
		
	}
	private static void dfs(int next, Queue<Integer> queue) {

		for(int i = 0 ; i < list[next].size() ; i++) {
			int nnext = list[next].get(i);
			queue.add(nnext);
			dfs(nnext,queue);
		}
	}
	
}
