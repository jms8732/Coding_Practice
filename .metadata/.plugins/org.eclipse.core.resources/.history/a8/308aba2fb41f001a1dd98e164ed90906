package combination;

//암호 만들기
import java.util.*;
import java.io.*;

public class problem_1759 {
	static boolean[] visited;

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		StringTokenizer st = new StringTokenizer(br.readLine());

		int n = Integer.parseInt(st.nextToken());
		int r = Integer.parseInt(st.nextToken());
		visited = new boolean[r];
		char[] alphabet = new char[r];
		char[] value = new char[n];
		st = new StringTokenizer(br.readLine());

		for (int i = 0; i < r; i++) {
			alphabet[i] = st.nextToken().charAt(0);
		}

		Arrays.sort(alphabet);

		dfs(alphabet, value, 0, n, r);
	}

	private static void dfs(char[] alp, char[] val, int depth, int n, int r) {
		if (depth == n) {
			print(val);
			return;
		}

		for (int i = depth; i < r; i++) {
			if (!visited[i]) {
				visited[i] = true;
				val[depth] = alp[i];
				dfs(alp, val, depth + 1, n, r);
				visited[i] =false;
			}
		}
	}

	private static void print(char[] val) {
		for (char c : val)
			System.out.print(c);
		System.out.println();
	}
}
