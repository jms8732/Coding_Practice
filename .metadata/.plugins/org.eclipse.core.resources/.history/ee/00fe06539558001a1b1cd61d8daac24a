package combination;

//다음 순열
import java.util.*;
import java.io.*;

public class problem_10972 {
	static boolean np = false;
	public static void main(String[] args) throws IOException {
		//BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		//int N = Integer.parseInt(br.readLine());
		//StringTokenizer st = new StringTokenizer(br.readLine());
		int[] array = new int[10000];

		for (int i = 0; i < 10000; i++) {
			array[i] = i + 1;//Integer.parseInt(st.nextToken());
		}

		int value = array[0];
		boolean[] visited = new boolean[10000];

		boolean check = false;
		for (int i = 1; i < 10000; i++) {
			if (value > array[i]) {
				value = array[i];
			} else {
				check = true;
				break;
			}
		}

		// 마지막 순열이 아닌 경우
		if (check) {
			int[] next = new int[10000];
			permutation(array);
		}else
			System.out.println(-1);

	}

	private static void permutation(int[] array) {
		int last = array.length-1;
		int prelast = array.length-2;
		
		int tmp = array[last];
		array[last] = array[prelast];
		array[prelast] = tmp;
		
		for(int i =0 ; i < array.length ; i++) {
			System.out.print(array[i] + " ");
		}
		
	}

}
