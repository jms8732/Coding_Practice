package samsung_Atype;

//색종이 붙이기
import java.util.*;
import java.io.*;

public class problem_17136 {
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		Queue<Node> queue = new LinkedList<>();
		StringTokenizer st = null;
		int N = 10;
		int [][] map = new int[N][N];
		int [] paper = new int[5];
		
		//색종이 초기화
		for(int i =0 ; i <paper.length ; i++ ) paper[i] = 5;
		
		for(int i =0 ; i < N ; i++) {
			st = new StringTokenizer(br.readLine());
			for(int j =0 ; j< N ; j++) {
				map[i][j] = Integer.parseInt(st.nextToken());
			}
		}
		
		for(int i =0 ; i< N ; i++) {
			for(int j =0 ; j< N; j++) {
				
			}
		}
	}
	
	private static boolean isCovered(int x,int y, int [][] map) {
		
		
	}
	
	private static boolean isFinish(int[][] map) {
		for(int i =0 ; i < 10 ; i++) {
			for(int j =0 ; j< 10 ; j++) {
				if(map[i][j] == 1)
					return false;
			}
		}
		
		return true;
	}
	
	
	private static class Node{
		int [][] map;
		int[] paper;
		int count;
		public Node(int [][] map, int [] paper, int count) {
			this.paper = new int[paper.length];
			System.arraycopy(paper, 0, this.paper, 0, paper.length);
			this.map = new int[10][10];
			int idx =0 ;
			for(int tmp [] : map) {
				System.arraycopy(tmp, 0, this.map[idx++], 0, tmp.length);
			}
			this.count = count;
		}
		
	}
}
