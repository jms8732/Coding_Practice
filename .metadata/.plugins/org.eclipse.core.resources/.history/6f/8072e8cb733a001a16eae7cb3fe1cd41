package combination;

//N°ú M (3)
import java.io.*;
import java.util.*;

public class problem_15651 {
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());

		int N = Integer.parseInt(st.nextToken());
		int M = Integer.parseInt(st.nextToken());

		int[] array = new int[M];
		int depth = 0;
		dfs(depth, N, 1, array);
	}

	private static void dfs(int depth, int N, int value, int[] array) {
		if (depth == array.length) {
			print(array);
			return;
		}

		array[depth] = value;
		if (value <= N) {
			dfs(depth + 1, N, value, array);
			dfs(depth, N, value + 1, array);
		}
	}

	private static void print(int[] array) {
		for (int i : array) {
			System.out.print(i + " ");
		}
		System.out.println();
	}
}
