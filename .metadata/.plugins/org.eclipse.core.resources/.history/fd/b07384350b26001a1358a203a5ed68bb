package combination;
//합분해

import java.io.*;
import java.util.*;

public class problem_2225 {
	static int COUNT = 0;
	public static void main(String[] args) throws IOException{
		BufferedReader br= new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		
		int N = Integer.parseInt(st.nextToken());
		int K = Integer.parseInt(st.nextToken());
		int [] array = new int[N];
		
		for(int i =0 ; i< N ; i++) array[i]= i;
		
		reCombination(0,0,0,N,K,array);
		System.out.println(COUNT);
	}
	
	private static void reCombination(int depth,int count, int value, int n,int k, int [] array) {
		if(count == k) {
			if(value == n) //값이 같을 경우
				COUNT++;
			return;
		}
		if(depth == n) //범위를 벗어나는 경우
			return;
		
		reCombination(depth,count+1,value+array[depth],n,k,array);
		reCombination(depth+1,count,value,n,k,array);
	}
}
