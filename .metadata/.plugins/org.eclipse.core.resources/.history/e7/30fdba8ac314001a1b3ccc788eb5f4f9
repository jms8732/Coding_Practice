package programmers1;

//보행자 천국
public class problem_11 {
	static int MOD = 20170805;

	public static void main(String[] args) {
		int [][] t = {{0,2,0,0,0,2},{0,0,2,0,1,0},{1,0,0,2,2,0}};
		int result = solution(3,6,t);
		System.out.println(result);
	}

	public static int solution(int m, int n, int[][] cityMap) {
		int[][] map = new int[m + 1][n + 1];
		int idx =1 ;
		for (int t[] : cityMap) {
			System.arraycopy(t, 0, map[idx], 1, t.length);
			idx ++;
		}

		map[1][1] = -1;
		for (int i = 1; i <= m; i++) {
			for (int j = 1; j <= n; j++) {
				if (map[i][j] == 1) {
					map[i][j] = 0;
					continue;
				}
				if (i == 1) {
					map[i][j] += map[i][j - 1];
				} else {
					if (map[i - 1][j] == 2) {
						// 위에 2인 경우
						int nx = i - 1;
						while (map[nx][j] != 2) {
							nx = nx - 1;
						}
						map[i][j] = map[nx][j] + map[i][j - 1] % MOD;
					} else if (map[i][j - 1] == 2) {
						// 왼쪽이 2인 경우
						int ny = j - 1;
						while (map[i][ny] != 2) {
							ny -= 1;
						}
						map[i][j] = map[i - 1][j] + map[i][ny] %MOD;
					} else if (map[i - 1][j] == 2 && map[i][j - 1] == 2) {
						// 위와 왼쪽이 2인 경우
						int nx = i - 1, ny = j - 1;
						while (map[nx][j] != 2)
							nx -= 1;
						while (map[i][ny] != 2)
							ny -= 1;

						map[i][j] = map[nx][j] + map[i][ny] %MOD;
					} else
						map[i][j] = map[i - 1][j] + map[i][j - 1] %MOD;
				}

			}
		}
		return Math.abs(map[m][n]);
	}
}
