package others;
//골드바흐의 추측

import java.util.*;

public class problem_6588 {
	static int number;

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);

		while (true) {
			number = sc.nextInt();
			if (number == 0)
				break;

			boolean[] prime = new boolean[number];
			List<Integer> tmp = new ArrayList<>();
			for (int i = 2; i < number; i++) {
				if (!prime[i]) {
					prime[i] = true;

					// 입력값 내 홀수 소수를 넣는다.
					if (i % 2 != 0) {
						tmp.add(i);
					}
					for (int j = i; j < number; j += i) {
						prime[j] = true;
					}
				}
			}

			Queue<Integer> queue = new LinkedList<>(tmp);
			combination(queue);
		}
	}

	private static void combination(Queue<Integer> queue) {
		boolean check = false;
		int value = 0;
		while (!queue.isEmpty()) {
			value = queue.poll();
			if (queue.contains(number - value)) {
				check = true;
				break;
			}
		}

		if (check) {
			System.out.println(number + " = " + value + " + " + (number - value));
		} else
			System.out.println("Goldbach's conjecture is wrong.");
	}
}
