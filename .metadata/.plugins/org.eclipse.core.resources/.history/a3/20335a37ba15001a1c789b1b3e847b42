package dijkstra;
//ÆÄÆ¼

import java.util.*;
import java.io.*;

public class problem_1238 {
	static int start =0;
	static int N = 0, M= 0;
	static BufferedReader br;
	public static void main(String[] args) {
		br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = null;
		try {
			st = new StringTokenizer(br.readLine()); 
			N = Integer.parseInt(st.nextToken()); //n
			M = Integer.parseInt(st.nextToken()); //m
			start  = Integer.parseInt(st.nextToken()) -1;
			
			dijkstra(start);
			
		}catch(IOException e) {
			e.printStackTrace();
		}
		
	}
	private static void dijkstra(int start) {
		int dist [] = new int[N];
		List<Node> list[] = new ArrayList<>[N];
		for(int i =0 ; i < M ; i++) {
			
		}
	}
	private static class Node{
		int idx,distance;
		public Node(int i , int d) {
			this.idx =i;
			this.distance =d;
		}
	}
}
